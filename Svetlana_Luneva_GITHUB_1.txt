JSON

 4. Создать внешний репозиторий c названием JSON.

 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/SvetlanaLuneva/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "add first file"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 cat > new.json
{
   "ФИО":"Luneva Svetlana Vital`evna",
   "Age":34,
   "Pet":"cat",
   "Pay":100000
}
Cntrl + C

11. Отправить изменения на внешний репозиторий.
git add new.json
git commit - m "add info"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 cat > preferences.json
{
   "Film":"Любовь и голуби",
   "Serial":"Friends",
   "Food":"scrambled eggs",
   "Country":"Japan"
}
Cntrl + C

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 cat > sklls.json
  "skills":[
      "HTTP Методы запросов на сервер",
      "Тестирование API через Postman",
      "Charles и Fiddler",
      "Мобильное тестирование",
      "Основы SQL",
      "Нагрузочное тестирование в Jmeter"
   ]


 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add 2 files"
git push

 16. На веб интерфейсе создать файл bug_report.json.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull


XML
 21. Создать внешний репозиторий c названием XML.

 22. Клонировать репозиторий XML на локальный компьютер.
$ git clone https://github.com/SvetlanaLuneva/XML.git

 23. Внутри локального XML создать файл “new.xml”.
$ touch new.xml

 24. Добавить файл под гит.
$ git add new.xml

 25. Закоммитить файл.
$ git commit -m "add new file"

 26. Отправить файл на внешний GitHub репозиторий.
$ git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
$ cat > new.txt
<?xml version="1.0" encoding="UTF-8"?>
<root>
    <surname>Luneva</surname>
    <name>Svetlana</name>
    <patronymic>Vital`evna</patronymic>
    <age>34</age>
    <pet>cat</pet>
    <pay>100000</pay>
</root>
Cntrl + C
 
28. Отправить изменения на внешний репозиторий.
$ git add .
$ git commit -m "add info"
$ git push

 29. Создать файл preferences.xml
$ touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
$ cat > preferences.xml
<?xml version="1.0" encoding="UTF-8"?>
<root>
  <Film>Любовь и голуби</Film>
  <Serial>Friends</Serial>
  <Food>scrambled eggs</Food>
  <Country>Japan</Country>
</root>
Cntrl + C
 
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 $ cat > skills.xml
<?xml version="1.0" encoding="UTF-8"?>
<root>
  <skills>1. HTTP Методы запросов на сервер</skills>
  <skills>2. Тестирование API через Postman</skills>
  <skills>3. Charles и Fiddler</skills>
  <skills>4. Мобильное тестирование</skills>
  <skills>5. Основы SQL</skills>
  <skills>6. Нагрузочное тестирование в Jmeter</skills>
</root>
Cntrl + C

32. Сделать коммит в одну строку.
$ git add .
$ git commit -m "add 2 files"

 33. Отправить сразу 2 файла на внешний репозиторий.
$ git push

 34. На веб интерфейсе создать файл bug_report.xml.

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 38. Синхронизировать внешний и локальный репозиторий XML
$ git fetch
$ git pull

TXT
 1. Создать внешний репозиторий c названием TXT.

 2. Клонировать репозиторий TXT на локальный компьютер.
$ git clone https://github.com/SvetlanaLuneva/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
$ touch new.txt

 4. Добавить файл под гит.
$ git add new.txt

 5. Закоммитить файл.
$ git commit -m "add first file"

 6. Отправить файл на внешний GitHub репозиторий.
$ git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
$ cat > new.txt
ФИО: Luneva Svetlana Vital`evna
Age: 34
Pet: cat
Pay: 100 000
Cntrl + C

8. Отправить изменения на внешний репозиторий.
$ git add new.txt
$ git commit -m "add info"
$ git push

 9. Создать файл preferences.txt
$ touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
$ cat > preferences.txt
Любимый фильм - любовь и голуби
Любимый сериал - Друзья
Любимая еда - яишница
Страна - Япония
Cntrl + C
 
11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
$ vim skills.txt
INSERT
 Скиллы:
 HTTP Методы запросов на сервер
 Тестирование API через Postman
 Charles и Fiddler
 Мобильное тестирование
 Основы SQL
 Нагрузочное тестирование в Jmeter
ESC
:wq

 12. Сделать коммит в одну строку.
$ git add .
$ git commit -m "add 2 files"

 13. Отправить сразу 2 файла на внешний репозиторий.
$ git push

 14. На веб интерфейсе создать файл bug_report.txt.

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе..

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. Синхронизировать внешний и локальный репозиторий TXT
$ git fetch
$ git pull




